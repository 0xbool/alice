// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/getamis/alice/crypto/tss/dkg/message.proto

package dkg

import (
	fmt "fmt"
	birkhoffinterpolation "github.com/getamis/alice/crypto/birkhoffinterpolation"
	commitment "github.com/getamis/alice/crypto/commitment"
	oprf "github.com/getamis/alice/crypto/oprf"
	zkproof "github.com/getamis/alice/crypto/zkproof"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_Peer     Type = 0
	Type_Decommit Type = 1
	Type_Verify   Type = 2
	Type_Result   Type = 3
	// For OPRF
	Type_OPRFRequest  Type = 4
	Type_OPRFResponse Type = 5
)

var Type_name = map[int32]string{
	0: "Peer",
	1: "Decommit",
	2: "Verify",
	3: "Result",
	4: "OPRFRequest",
	5: "OPRFResponse",
}

var Type_value = map[string]int32{
	"Peer":         0,
	"Decommit":     1,
	"Verify":       2,
	"Result":       3,
	"OPRFRequest":  4,
	"OPRFResponse": 5,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_727ac1befdf68301, []int{0}
}

type Message struct {
	Type Type   `protobuf:"varint,1,opt,name=type,proto3,enum=dkg.Type" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Message_Peer
	//	*Message_Decommit
	//	*Message_Verify
	//	*Message_Result
	//	*Message_OprfRequest
	//	*Message_OprfResponse
	Body                 isMessage_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_727ac1befdf68301, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_Peer
}

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type isMessage_Body interface {
	isMessage_Body()
}

type Message_Peer struct {
	Peer *BodyPeer `protobuf:"bytes,3,opt,name=peer,proto3,oneof"`
}

type Message_Decommit struct {
	Decommit *BodyDecommit `protobuf:"bytes,4,opt,name=decommit,proto3,oneof"`
}

type Message_Verify struct {
	Verify *BodyVerify `protobuf:"bytes,5,opt,name=verify,proto3,oneof"`
}

type Message_Result struct {
	Result *BodyResult `protobuf:"bytes,6,opt,name=result,proto3,oneof"`
}

type Message_OprfRequest struct {
	OprfRequest *BodyOPRFRequest `protobuf:"bytes,7,opt,name=oprfRequest,proto3,oneof"`
}

type Message_OprfResponse struct {
	OprfResponse *oprf.OprfResponseMessage `protobuf:"bytes,8,opt,name=oprfResponse,proto3,oneof"`
}

func (*Message_Peer) isMessage_Body() {}

func (*Message_Decommit) isMessage_Body() {}

func (*Message_Verify) isMessage_Body() {}

func (*Message_Result) isMessage_Body() {}

func (*Message_OprfRequest) isMessage_Body() {}

func (*Message_OprfResponse) isMessage_Body() {}

func (m *Message) GetBody() isMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Message) GetPeer() *BodyPeer {
	if x, ok := m.GetBody().(*Message_Peer); ok {
		return x.Peer
	}
	return nil
}

func (m *Message) GetDecommit() *BodyDecommit {
	if x, ok := m.GetBody().(*Message_Decommit); ok {
		return x.Decommit
	}
	return nil
}

func (m *Message) GetVerify() *BodyVerify {
	if x, ok := m.GetBody().(*Message_Verify); ok {
		return x.Verify
	}
	return nil
}

func (m *Message) GetResult() *BodyResult {
	if x, ok := m.GetBody().(*Message_Result); ok {
		return x.Result
	}
	return nil
}

func (m *Message) GetOprfRequest() *BodyOPRFRequest {
	if x, ok := m.GetBody().(*Message_OprfRequest); ok {
		return x.OprfRequest
	}
	return nil
}

func (m *Message) GetOprfResponse() *oprf.OprfResponseMessage {
	if x, ok := m.GetBody().(*Message_OprfResponse); ok {
		return x.OprfResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_Peer)(nil),
		(*Message_Decommit)(nil),
		(*Message_Verify)(nil),
		(*Message_Result)(nil),
		(*Message_OprfRequest)(nil),
		(*Message_OprfResponse)(nil),
	}
}

type BodyPeer struct {
	Bk                   *birkhoffinterpolation.BkParameterMessage `protobuf:"bytes,1,opt,name=bk,proto3" json:"bk,omitempty"`
	Commitment           *commitment.HashCommitmentMessage         `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *BodyPeer) Reset()         { *m = BodyPeer{} }
func (m *BodyPeer) String() string { return proto.CompactTextString(m) }
func (*BodyPeer) ProtoMessage()    {}
func (*BodyPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_727ac1befdf68301, []int{1}
}

func (m *BodyPeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BodyPeer.Unmarshal(m, b)
}
func (m *BodyPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BodyPeer.Marshal(b, m, deterministic)
}
func (m *BodyPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BodyPeer.Merge(m, src)
}
func (m *BodyPeer) XXX_Size() int {
	return xxx_messageInfo_BodyPeer.Size(m)
}
func (m *BodyPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_BodyPeer.DiscardUnknown(m)
}

var xxx_messageInfo_BodyPeer proto.InternalMessageInfo

func (m *BodyPeer) GetBk() *birkhoffinterpolation.BkParameterMessage {
	if m != nil {
		return m.Bk
	}
	return nil
}

func (m *BodyPeer) GetCommitment() *commitment.HashCommitmentMessage {
	if m != nil {
		return m.Commitment
	}
	return nil
}

type BodyDecommit struct {
	HashDecommitment     *commitment.HashDecommitmentMessage `protobuf:"bytes,1,opt,name=hashDecommitment,proto3" json:"hashDecommitment,omitempty"`
	PointCommitment      *commitment.PointCommitmentMessage  `protobuf:"bytes,2,opt,name=pointCommitment,proto3" json:"pointCommitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *BodyDecommit) Reset()         { *m = BodyDecommit{} }
func (m *BodyDecommit) String() string { return proto.CompactTextString(m) }
func (*BodyDecommit) ProtoMessage()    {}
func (*BodyDecommit) Descriptor() ([]byte, []int) {
	return fileDescriptor_727ac1befdf68301, []int{2}
}

func (m *BodyDecommit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BodyDecommit.Unmarshal(m, b)
}
func (m *BodyDecommit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BodyDecommit.Marshal(b, m, deterministic)
}
func (m *BodyDecommit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BodyDecommit.Merge(m, src)
}
func (m *BodyDecommit) XXX_Size() int {
	return xxx_messageInfo_BodyDecommit.Size(m)
}
func (m *BodyDecommit) XXX_DiscardUnknown() {
	xxx_messageInfo_BodyDecommit.DiscardUnknown(m)
}

var xxx_messageInfo_BodyDecommit proto.InternalMessageInfo

func (m *BodyDecommit) GetHashDecommitment() *commitment.HashDecommitmentMessage {
	if m != nil {
		return m.HashDecommitment
	}
	return nil
}

func (m *BodyDecommit) GetPointCommitment() *commitment.PointCommitmentMessage {
	if m != nil {
		return m.PointCommitment
	}
	return nil
}

type BodyVerify struct {
	Verify               *commitment.FeldmanVerifyMessage `protobuf:"bytes,1,opt,name=verify,proto3" json:"verify,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *BodyVerify) Reset()         { *m = BodyVerify{} }
func (m *BodyVerify) String() string { return proto.CompactTextString(m) }
func (*BodyVerify) ProtoMessage()    {}
func (*BodyVerify) Descriptor() ([]byte, []int) {
	return fileDescriptor_727ac1befdf68301, []int{3}
}

func (m *BodyVerify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BodyVerify.Unmarshal(m, b)
}
func (m *BodyVerify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BodyVerify.Marshal(b, m, deterministic)
}
func (m *BodyVerify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BodyVerify.Merge(m, src)
}
func (m *BodyVerify) XXX_Size() int {
	return xxx_messageInfo_BodyVerify.Size(m)
}
func (m *BodyVerify) XXX_DiscardUnknown() {
	xxx_messageInfo_BodyVerify.DiscardUnknown(m)
}

var xxx_messageInfo_BodyVerify proto.InternalMessageInfo

func (m *BodyVerify) GetVerify() *commitment.FeldmanVerifyMessage {
	if m != nil {
		return m.Verify
	}
	return nil
}

type BodyResult struct {
	SiGProofMsg          *zkproof.SchnorrProofMessage `protobuf:"bytes,1,opt,name=siGProofMsg,proto3" json:"siGProofMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BodyResult) Reset()         { *m = BodyResult{} }
func (m *BodyResult) String() string { return proto.CompactTextString(m) }
func (*BodyResult) ProtoMessage()    {}
func (*BodyResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_727ac1befdf68301, []int{4}
}

func (m *BodyResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BodyResult.Unmarshal(m, b)
}
func (m *BodyResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BodyResult.Marshal(b, m, deterministic)
}
func (m *BodyResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BodyResult.Merge(m, src)
}
func (m *BodyResult) XXX_Size() int {
	return xxx_messageInfo_BodyResult.Size(m)
}
func (m *BodyResult) XXX_DiscardUnknown() {
	xxx_messageInfo_BodyResult.DiscardUnknown(m)
}

var xxx_messageInfo_BodyResult proto.InternalMessageInfo

func (m *BodyResult) GetSiGProofMsg() *zkproof.SchnorrProofMessage {
	if m != nil {
		return m.SiGProofMsg
	}
	return nil
}

type BodyOPRFRequest struct {
	X                    []byte                   `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Request              *oprf.OprfRequestMessage `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BodyOPRFRequest) Reset()         { *m = BodyOPRFRequest{} }
func (m *BodyOPRFRequest) String() string { return proto.CompactTextString(m) }
func (*BodyOPRFRequest) ProtoMessage()    {}
func (*BodyOPRFRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_727ac1befdf68301, []int{5}
}

func (m *BodyOPRFRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BodyOPRFRequest.Unmarshal(m, b)
}
func (m *BodyOPRFRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BodyOPRFRequest.Marshal(b, m, deterministic)
}
func (m *BodyOPRFRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BodyOPRFRequest.Merge(m, src)
}
func (m *BodyOPRFRequest) XXX_Size() int {
	return xxx_messageInfo_BodyOPRFRequest.Size(m)
}
func (m *BodyOPRFRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BodyOPRFRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BodyOPRFRequest proto.InternalMessageInfo

func (m *BodyOPRFRequest) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *BodyOPRFRequest) GetRequest() *oprf.OprfRequestMessage {
	if m != nil {
		return m.Request
	}
	return nil
}

func init() {
	proto.RegisterEnum("dkg.Type", Type_name, Type_value)
	proto.RegisterType((*Message)(nil), "dkg.Message")
	proto.RegisterType((*BodyPeer)(nil), "dkg.BodyPeer")
	proto.RegisterType((*BodyDecommit)(nil), "dkg.BodyDecommit")
	proto.RegisterType((*BodyVerify)(nil), "dkg.BodyVerify")
	proto.RegisterType((*BodyResult)(nil), "dkg.BodyResult")
	proto.RegisterType((*BodyOPRFRequest)(nil), "dkg.BodyOPRFRequest")
}

func init() {
	proto.RegisterFile("github.com/getamis/alice/crypto/tss/dkg/message.proto", fileDescriptor_727ac1befdf68301)
}

var fileDescriptor_727ac1befdf68301 = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xd1, 0x6e, 0xd3, 0x3e,
	0x14, 0xc6, 0x9b, 0x2c, 0xeb, 0xba, 0xd3, 0xfe, 0xd7, 0xfc, 0x2d, 0x2e, 0xc2, 0x04, 0x52, 0xc9,
	0x6e, 0x36, 0x2e, 0x1c, 0xa9, 0x08, 0x69, 0xdc, 0x0c, 0xb1, 0xa1, 0xd1, 0x8b, 0x4d, 0xab, 0x3c,
	0x84, 0xc4, 0x65, 0xd2, 0xb8, 0xa9, 0x95, 0x26, 0x0e, 0xb6, 0x87, 0x56, 0x9e, 0x80, 0x97, 0xe1,
	0xb9, 0x78, 0x0d, 0x14, 0x3b, 0xc9, 0xd2, 0x80, 0xd4, 0xbb, 0xfa, 0x9c, 0xdf, 0xf7, 0xf5, 0x1c,
	0xe7, 0x33, 0xbc, 0x4d, 0x98, 0x5a, 0x3d, 0x44, 0x78, 0xc1, 0xb3, 0x20, 0xa1, 0x2a, 0xcc, 0x98,
	0x0c, 0xc2, 0x35, 0x5b, 0xd0, 0x60, 0x21, 0x36, 0x85, 0xe2, 0x81, 0x92, 0x32, 0x88, 0xd3, 0x24,
	0xc8, 0xa8, 0x94, 0x61, 0x42, 0x71, 0x21, 0xb8, 0xe2, 0x68, 0x2f, 0x4e, 0x93, 0xe3, 0x8b, 0x5d,
	0xda, 0x88, 0x89, 0x74, 0xc5, 0x97, 0x4b, 0x96, 0x2b, 0x2a, 0x0a, 0xbe, 0x0e, 0x15, 0xe3, 0x79,
	0x10, 0xa5, 0xc6, 0xe4, 0xf8, 0x7c, 0x97, 0x7e, 0xc1, 0xb3, 0x8c, 0xa9, 0x8c, 0xe6, 0x6a, 0xfb,
	0xef, 0x8f, 0x77, 0x4e, 0xfd, 0x23, 0x2d, 0x04, 0xe7, 0xcb, 0x8e, 0x6c, 0xba, 0x4b, 0xc6, 0x0b,
	0xd1, 0xd1, 0xf8, 0xbf, 0x6d, 0x38, 0xb8, 0x35, 0x15, 0xf4, 0x12, 0x1c, 0xb5, 0x29, 0xa8, 0x67,
	0x4d, 0xac, 0xd3, 0xa3, 0xe9, 0x21, 0x8e, 0xd3, 0x04, 0x7f, 0xde, 0x14, 0x94, 0xe8, 0x32, 0x3a,
	0x02, 0x9b, 0xc5, 0x9e, 0x3d, 0xb1, 0x4e, 0x0f, 0x89, 0xcd, 0x62, 0x74, 0x02, 0x4e, 0x41, 0xa9,
	0xf0, 0xf6, 0x26, 0xd6, 0xe9, 0x70, 0xfa, 0x9f, 0xc6, 0x2f, 0x79, 0xbc, 0x99, 0x53, 0x2a, 0x66,
	0x3d, 0xa2, 0x9b, 0x28, 0x80, 0x41, 0x4c, 0xcd, 0xa2, 0x9e, 0xa3, 0xc1, 0xff, 0x1b, 0xf0, 0x63,
	0xd5, 0x98, 0xf5, 0x48, 0x03, 0xa1, 0x33, 0xe8, 0x7f, 0xa7, 0x82, 0x2d, 0x37, 0xde, 0xbe, 0xc6,
	0xc7, 0x0d, 0xfe, 0x45, 0x97, 0x67, 0x3d, 0x52, 0x01, 0x25, 0x2a, 0xa8, 0x7c, 0x58, 0x2b, 0xaf,
	0xdf, 0x41, 0x89, 0x2e, 0x97, 0xa8, 0x01, 0xd0, 0x39, 0x0c, 0xcb, 0xe5, 0x09, 0xfd, 0xf6, 0x40,
	0xa5, 0xf2, 0x0e, 0x34, 0xff, 0xac, 0xe1, 0xef, 0xe6, 0xe4, 0xba, 0xea, 0xcd, 0x7a, 0xa4, 0x8d,
	0xa2, 0xf7, 0x30, 0x32, 0x47, 0x59, 0xf0, 0x5c, 0x52, 0x6f, 0xa0, 0xa5, 0xcf, 0x71, 0x59, 0xc4,
	0x77, 0xad, 0x4e, 0x75, 0x8b, 0xb3, 0x1e, 0xd9, 0x12, 0x5c, 0xf6, 0xc1, 0x89, 0x78, 0xbc, 0xf1,
	0x7f, 0x5a, 0x30, 0xa8, 0xaf, 0x07, 0xbd, 0x03, 0x3b, 0x4a, 0xf5, 0x45, 0x0f, 0xa7, 0x67, 0xf8,
	0x9f, 0x41, 0xc2, 0x97, 0xe9, 0x3c, 0x14, 0x61, 0x46, 0x15, 0x15, 0x95, 0x37, 0xb1, 0xa3, 0x14,
	0x7d, 0x00, 0x78, 0x0a, 0x8e, 0xfe, 0x1c, 0xc3, 0xe9, 0x2b, 0xfc, 0x54, 0xc2, 0xb3, 0x50, 0xae,
	0xae, 0x9a, 0x63, 0x2d, 0x6d, 0x89, 0xfc, 0x5f, 0x16, 0x8c, 0xda, 0x1f, 0x00, 0xdd, 0x81, 0xbb,
	0x0a, 0xe5, 0xaa, 0x3e, 0x6b, 0x67, 0x33, 0xdc, 0x49, 0xd7, 0xb9, 0xcd, 0xd4, 0xde, 0x7f, 0x89,
	0xd1, 0x0d, 0x8c, 0x0b, 0xce, 0x72, 0x75, 0xd5, 0x9d, 0xd4, 0x6f, 0xfb, 0xcd, 0xb7, 0x91, 0xda,
	0xae, 0x2b, 0xf5, 0xaf, 0x01, 0x9e, 0x02, 0x80, 0xce, 0x9b, 0x84, 0x98, 0x11, 0x27, 0x6d, 0xcb,
	0x6b, 0xba, 0x8e, 0xb3, 0x30, 0x37, 0x68, 0x6d, 0x58, 0xf1, 0xfe, 0x8d, 0xf1, 0x31, 0xe9, 0x40,
	0x17, 0x30, 0x94, 0xec, 0xd3, 0xbc, 0x7c, 0x48, 0xb7, 0x32, 0xa9, 0xcc, 0x5e, 0xe0, 0xea, 0x6d,
	0xe1, 0xfb, 0xc5, 0x2a, 0xe7, 0x42, 0x98, 0x7e, 0x65, 0xd4, 0x16, 0xf8, 0xf7, 0x30, 0xee, 0x64,
	0x07, 0x8d, 0xc0, 0x7a, 0xd4, 0x46, 0x23, 0x62, 0x3d, 0xa2, 0x29, 0x1c, 0x88, 0x2a, 0x70, 0x66,
	0x79, 0xaf, 0x9d, 0x1a, 0xdd, 0xa8, 0x8d, 0x6b, 0xf0, 0xf5, 0x57, 0x70, 0xca, 0x27, 0x87, 0x06,
	0xe0, 0x94, 0x41, 0x71, 0x7b, 0x68, 0x04, 0x83, 0xfa, 0x6a, 0x5d, 0x0b, 0x01, 0xf4, 0xcd, 0x6e,
	0xae, 0x5d, 0xfe, 0x36, 0xab, 0xb8, 0x7b, 0x68, 0x0c, 0xc3, 0xd6, 0x20, 0xae, 0x83, 0x5c, 0x18,
	0x99, 0x82, 0x89, 0xa1, 0xbb, 0x1f, 0xf5, 0xf5, 0x8b, 0x7f, 0xf3, 0x27, 0x00, 0x00, 0xff, 0xff,
	0x48, 0xfa, 0x86, 0x6f, 0x14, 0x05, 0x00, 0x00,
}
