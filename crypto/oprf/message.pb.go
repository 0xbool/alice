// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/getamis/alice/crypto/oprf/message.proto

package oprf

import (
	fmt "fmt"
	ecpointgrouplaw "github.com/getamis/alice/crypto/ecpointgrouplaw"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OprfRequestMessage struct {
	Alpha                *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,1,opt,name=alpha,proto3" json:"alpha,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *OprfRequestMessage) Reset()         { *m = OprfRequestMessage{} }
func (m *OprfRequestMessage) String() string { return proto.CompactTextString(m) }
func (*OprfRequestMessage) ProtoMessage()    {}
func (*OprfRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c20d5102fdccec17, []int{0}
}

func (m *OprfRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OprfRequestMessage.Unmarshal(m, b)
}
func (m *OprfRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OprfRequestMessage.Marshal(b, m, deterministic)
}
func (m *OprfRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OprfRequestMessage.Merge(m, src)
}
func (m *OprfRequestMessage) XXX_Size() int {
	return xxx_messageInfo_OprfRequestMessage.Size(m)
}
func (m *OprfRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OprfRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OprfRequestMessage proto.InternalMessageInfo

func (m *OprfRequestMessage) GetAlpha() *ecpointgrouplaw.EcPointMessage {
	if m != nil {
		return m.Alpha
	}
	return nil
}

type OprfResponseMessage struct {
	Beta                 *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,1,opt,name=beta,proto3" json:"beta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *OprfResponseMessage) Reset()         { *m = OprfResponseMessage{} }
func (m *OprfResponseMessage) String() string { return proto.CompactTextString(m) }
func (*OprfResponseMessage) ProtoMessage()    {}
func (*OprfResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c20d5102fdccec17, []int{1}
}

func (m *OprfResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OprfResponseMessage.Unmarshal(m, b)
}
func (m *OprfResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OprfResponseMessage.Marshal(b, m, deterministic)
}
func (m *OprfResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OprfResponseMessage.Merge(m, src)
}
func (m *OprfResponseMessage) XXX_Size() int {
	return xxx_messageInfo_OprfResponseMessage.Size(m)
}
func (m *OprfResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OprfResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OprfResponseMessage proto.InternalMessageInfo

func (m *OprfResponseMessage) GetBeta() *ecpointgrouplaw.EcPointMessage {
	if m != nil {
		return m.Beta
	}
	return nil
}

func init() {
	proto.RegisterType((*OprfRequestMessage)(nil), "oprf.OprfRequestMessage")
	proto.RegisterType((*OprfResponseMessage)(nil), "oprf.OprfResponseMessage")
}

func init() {
	proto.RegisterFile("github.com/getamis/alice/crypto/oprf/message.proto", fileDescriptor_c20d5102fdccec17)
}

var fileDescriptor_c20d5102fdccec17 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xce, 0xb1, 0xab, 0xc2, 0x30,
	0x10, 0xc7, 0x71, 0x0a, 0x7d, 0x6f, 0xc8, 0xdb, 0xfa, 0x16, 0x71, 0x51, 0x3a, 0x39, 0x25, 0xd0,
	0xe2, 0xe4, 0xec, 0xa2, 0x88, 0xd2, 0xff, 0x20, 0x0d, 0xd7, 0x34, 0xd0, 0xf6, 0xce, 0xe4, 0x8a,
	0xf8, 0xdf, 0x4b, 0x1b, 0x5d, 0x5c, 0x74, 0xfc, 0x85, 0x6f, 0x3e, 0x9c, 0x28, 0xac, 0xe3, 0x76,
	0xac, 0xa5, 0xc1, 0x5e, 0x59, 0x60, 0xdd, 0xbb, 0xa0, 0x74, 0xe7, 0x0c, 0x28, 0xe3, 0xef, 0xc4,
	0xa8, 0x90, 0x7c, 0xa3, 0x7a, 0x08, 0x41, 0x5b, 0x90, 0xe4, 0x91, 0x31, 0x4b, 0xa7, 0xb7, 0xe5,
	0xee, 0xd3, 0x4f, 0x30, 0x84, 0x6e, 0x60, 0xeb, 0x71, 0xa4, 0x4e, 0xdf, 0xd4, 0xbc, 0x22, 0x91,
	0x1f, 0x45, 0x76, 0x26, 0xdf, 0x54, 0x70, 0x1d, 0x21, 0xf0, 0x29, 0xf2, 0xd9, 0x56, 0xfc, 0xe8,
	0x8e, 0x5a, 0xbd, 0x48, 0xd6, 0xc9, 0xe6, 0xaf, 0x58, 0xc9, 0x37, 0x42, 0xee, 0xcd, 0x65, 0xda,
	0xcf, 0xbe, 0x8a, 0x75, 0x7e, 0x10, 0xff, 0x11, 0x0b, 0x84, 0x43, 0x80, 0x97, 0x56, 0x8a, 0xb4,
	0x06, 0xfe, 0x1a, 0x9b, 0xe3, 0xfa, 0x77, 0xbe, 0xaf, 0x7c, 0x04, 0x00, 0x00, 0xff, 0xff, 0x8a,
	0xfe, 0x12, 0x34, 0x18, 0x01, 0x00, 0x00,
}
